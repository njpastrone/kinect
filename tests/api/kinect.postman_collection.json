{
  "info": {
    "name": "Kinect API Collection",
    "description": "Comprehensive API testing collection for the Kinect relationship management app",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001/api",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "contactId",
      "value": "",
      "type": "string"
    },
    {
      "key": "listId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register Demo User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.user).to.have.property('email');",
                  "    pm.expect(jsonData.data.tokens).to.have.property('accessToken');",
                  "    ",
                  "    // Store tokens for other requests",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('userId', jsonData.data.user._id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test.user@kinect.app\",\n    \"password\": \"testpass123\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login Demo User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.tokens).to.have.property('accessToken');",
                  "    ",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"demo.active@kinect.app\",\n    \"password\": \"demo123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Token refresh successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.tokens).to.have.property('accessToken');",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            }
          }
        }
      ]
    },
    {
      "name": "Contact Lists",
      "item": [
        {
          "name": "Get All Lists",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get lists successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    ",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.collectionVariables.set('listId', jsonData.data[0]._id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/lists",
              "host": ["{{baseUrl}}"],
              "path": ["lists"]
            }
          }
        },
        {
          "name": "Create Contact List",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('List creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('name', 'Test List');",
                  "    pm.collectionVariables.set('listId', jsonData.data._id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test List\",\n    \"description\": \"A test contact list\",\n    \"color\": \"#3B82F6\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/lists",
              "host": ["{{baseUrl}}"],
              "path": ["lists"]
            }
          }
        },
        {
          "name": "Update Contact List",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Test List\",\n    \"description\": \"Updated description\",\n    \"color\": \"#10B981\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}"]
            }
          }
        },
        {
          "name": "Delete Contact List",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Contacts",
      "item": [
        {
          "name": "Get All Contacts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get contacts successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('items');",
                  "    pm.expect(jsonData.data.items).to.be.an('array');",
                  "    ",
                  "    if (jsonData.data.items.length > 0) {",
                  "        pm.collectionVariables.set('contactId', jsonData.data.items[0]._id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/contacts?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["contacts"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Create Contact",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Contact creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('firstName', 'John');",
                  "    pm.expect(jsonData.data).to.have.property('lastName', 'Doe');",
                  "    pm.collectionVariables.set('contactId', jsonData.data._id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phoneNumber\": \"+1-555-1234\",\n    \"email\": \"john.doe@example.com\",\n    \"category\": \"FRIEND\",\n    \"notes\": \"Test contact created via API\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/contacts",
              "host": ["{{baseUrl}}"],
              "path": ["contacts"]
            }
          }
        },
        {
          "name": "Get Single Contact",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/contacts/{{contactId}}",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "{{contactId}}"]
            }
          }
        },
        {
          "name": "Update Contact",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"phoneNumber\": \"+1-555-5678\",\n    \"category\": \"BEST_FRIEND\",\n    \"notes\": \"Updated contact information\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/contacts/{{contactId}}",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "{{contactId}}"]
            }
          }
        },
        {
          "name": "Log Contact Interaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"PHONE_CALL\",\n    \"notes\": \"Had a great conversation\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/contacts/{{contactId}}/log-contact",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "{{contactId}}", "log-contact"]
            }
          }
        },
        {
          "name": "Delete Contact",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/contacts/{{contactId}}",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "{{contactId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Developer Tools",
      "item": [
        {
          "name": "Sync Phone Logs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/dev/sync-phone-logs",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "sync-phone-logs"]
            }
          }
        },
        {
          "name": "Bulk Sync Phone Logs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"days\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/dev/bulk-sync-phone-logs",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "bulk-sync-phone-logs"]
            }
          }
        },
        {
          "name": "Start Auto Sync",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"intervalMinutes\": 60\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/dev/start-auto-sync",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "start-auto-sync"]
            }
          }
        },
        {
          "name": "Stop Auto Sync",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/dev/stop-auto-sync",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "stop-auto-sync"]
            }
          }
        },
        {
          "name": "Get Sync Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/dev/sync-stats",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "sync-stats"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Cases",
      "item": [
        {
          "name": "Invalid Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid login returns 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"invalid@email.com\",\n    \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Duplicate Email Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Duplicate email returns 409', function () {",
                  "    pm.response.to.have.status(409);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"demo.active@kinect.app\",\n    \"password\": \"demo123\",\n    \"firstName\": \"Demo\",\n    \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Unauthorized Access",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Unauthorized access returns 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/contacts",
              "host": ["{{baseUrl}}"],
              "path": ["contacts"]
            }
          }
        },
        {
          "name": "Invalid Contact Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid data returns 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"email\": \"invalid-email\",\n    \"category\": \"INVALID_CATEGORY\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/contacts",
              "host": ["{{baseUrl}}"],
              "path": ["contacts"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if expired",
          "if (pm.collectionVariables.get('refreshToken') && !pm.collectionVariables.get('accessToken')) {",
          "    pm.sendRequest({",
          "        url: pm.collectionVariables.get('baseUrl') + '/auth/refresh',",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                refreshToken: pm.collectionVariables.get('refreshToken')",
          "            })",
          "        }",
          "    }, function (err, response) {",
          "        if (!err && response.code === 200) {",
          "            var jsonData = response.json();",
          "            pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
          "        }",
          "    });",
          "}"
        ]
      }
    }
  ]
}
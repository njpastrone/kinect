{
  "name": "@kinect/backend",
  "version": "1.0.0",
  "private": true,
  "main": "dist/backend/src/app.js",
  "scripts": {
    "dev": "nodemon",
    "build": "rm -rf dist && tsc && cp -r scripts dist/scripts 2>/dev/null || true",
    "start": "node dist/backend/src/app.js",
    "render-build": "npm ci && npm run build",
    "test": "jest",
    "test:reminders": "jest --testPathPattern=tests.*reminders",
    "test:coverage": "jest --coverage --coverageDirectory=coverage/reminders",
    "lint": "eslint src",
    "clean": "rm -rf dist",
    "test:atlas": "node ../scripts/test-atlas-connection.js",
    "export:railway": "bash ../scripts/export-railway-data.sh",
    "seed": "ts-node src/scripts/seed.ts",
    "reset": "ts-node src/scripts/reset.ts reset",
    "reset-and-seed": "ts-node src/scripts/reset.ts reset-and-seed",
    "migrate:categories": "ts-node src/scripts/migrate-categories-to-lists.ts",
    "demo:reminders": "node scripts/demo-reminders.js",
    "demo:quick": "node scripts/demo-quick.js",
    "demo:cleanup": "node scripts/demo-reminders.js --cleanup",
    "demo:reset": "npm run demo:cleanup",
    "test:setup-data": "node scripts/test-data-setup.js",
    "test:reminders:process": "node -e \"require('./tests/utils/reminderHelpers'); console.log('Processing reminders...')\"",
    "test:scenarios": "node scripts/test-scenarios.js",
    "start:services": "echo 'Starting MailHog...' && docker run -d --name mailhog-services -p 1025:1025 -p 8025:8025 mailhog/mailhog",
    "stop:services": "docker stop mailhog-services && docker rm mailhog-services",
    "mailhog:clear": "curl -X DELETE http://localhost:8025/api/v1/messages",
    "db:view-contacts": "node -e \"const mongoose = require('mongoose'); mongoose.connect('mongodb://localhost:27017/kinect-test-data').then(() => { const Contact = mongoose.model('Contact', new mongoose.Schema({}, {strict: false})); return Contact.find({}); }).then(contacts => { console.log('Contacts:', contacts.length); contacts.forEach(c => console.log(\\`- \\${c.firstName} \\${c.lastName}: \\${Math.floor((Date.now() - c.lastContactDate)/(24*60*60*1000))} days ago\\`)); process.exit(0); });\"",
    "db:count-overdue": "node -e \"const {calculateDaysOverdue} = require('./tests/utils/reminderHelpers'); const mongoose = require('mongoose'); mongoose.connect('mongodb://localhost:27017/kinect-test-data').then(() => { const Contact = mongoose.model('Contact', new mongoose.Schema({}, {strict: false})); return Contact.find({}); }).then(contacts => { const overdue = contacts.filter(c => calculateDaysOverdue(c) > 0); console.log(\\`Overdue contacts: \\${overdue.length}/\\${contacts.length}\\`); process.exit(0); });\""
  },
  "dependencies": {
    "@kinect/shared": "^1.0.0",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^7.0.1",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "express-rate-limit": "^7.2.0",
    "helmet": "^7.1.0",
    "joi": "^17.12.2",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.2.1",
    "morgan": "^1.10.0",
    "node-cron": "^4.2.1",
    "node-fetch": "^2.7.0",
    "nodemailer": "^7.0.5"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/morgan": "^1.9.9",
    "@types/node": "^22.7.4",
    "glob": "^11.0.0",
    "jest": "^29.7.0",
    "mongodb-memory-server": "^10.2.0",
    "nodemon": "^3.1.7",
    "rimraf": "^6.0.1",
    "supertest": "^7.1.4",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.2"
  }
}

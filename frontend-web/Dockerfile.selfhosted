# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy all package.json files first for better caching
COPY package*.json ./
COPY shared/package*.json ./shared/
COPY backend/package*.json ./backend/
COPY frontend-web/package*.json ./frontend-web/

# Install all dependencies at the root level (monorepo)
ENV HUSKY=0
RUN npm install

# Copy TypeScript config and source code
COPY tsconfig.base.json ./
COPY shared ./shared/
COPY frontend-web ./frontend-web/

# Build shared package
RUN cd shared && npm run build

# Build frontend
WORKDIR /app/frontend-web
ARG VITE_API_URL=/api
ARG VITE_SELF_HOSTED=true
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_SELF_HOSTED=${VITE_SELF_HOSTED}

RUN npm run build

# Production stage - nginx
FROM nginx:alpine

# Install curl for healthcheck
RUN apk add --no-cache curl

# Copy built frontend
COPY --from=builder /app/frontend-web/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY frontend-web/nginx.selfhosted.conf /etc/nginx/conf.d/default.conf

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
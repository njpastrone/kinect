# =====================================================
# Kinect Production Environment Configuration
# =====================================================
# Copy this file to .env.production and fill in your values

# =====================================================
# BASIC CONFIGURATION
# =====================================================

# Your domain name (no protocol, just domain)
DOMAIN_NAME=your-domain.com
# Alternative: use your server's IP address
# DOMAIN_NAME=192.168.1.100

# Frontend URL (full URL including protocol)
FRONTEND_URL=https://your-domain.com
# Alternative for IP: FRONTEND_URL=http://192.168.1.100

# API URL for frontend (usually /api for proxied setup)
VITE_API_URL=/api

# Port configuration
FRONTEND_PORT=80
# For HTTPS: FRONTEND_PORT=443

# =====================================================
# DATABASE CONFIGURATION
# =====================================================

# MongoDB credentials (generate strong passwords!)
MONGO_ROOT_USERNAME=kinect_admin
MONGO_ROOT_PASSWORD=CHANGE_ME_TO_STRONG_PASSWORD_123456789

# =====================================================
# SECURITY KEYS (REQUIRED - Generate these!)
# =====================================================

# Generate with: openssl rand -base64 32
JWT_SECRET=CHANGE_ME_TO_64_CHAR_SECRET_KEY_GENERATED_WITH_OPENSSL
JWT_REFRESH_SECRET=CHANGE_ME_TO_DIFFERENT_64_CHAR_SECRET_KEY

# Generate with: openssl rand -base64 32  
DATA_ENCRYPTION_KEY=CHANGE_ME_TO_32_CHAR_ENCRYPTION_KEY_FOR_DATABASE

# Generate with: openssl rand -base64 32
BACKUP_ENCRYPTION_KEY=CHANGE_ME_TO_BACKUP_ENCRYPTION_KEY

# =====================================================
# EMAIL CONFIGURATION (Required for reminders)
# =====================================================

# SMTP Server settings
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
SMTP_FROM="Kinect Reminders <your-email@gmail.com>"

# Gmail App Password: https://support.google.com/mail/answer/185833
# SendGrid: smtp.sendgrid.net (port 587)
# Mailgun: smtp.mailgun.org (port 587)  
# AWS SES: email-smtp.us-east-1.amazonaws.com (port 587)

# Email relay configuration (if using mail relay service)
EXTERNAL_SMTP_HOST=smtp.gmail.com
EXTERNAL_SMTP_PORT=587
EXTERNAL_SMTP_USER=your-email@gmail.com
EXTERNAL_SMTP_PASS=your-app-password
ALLOWED_SENDER_DOMAINS=your-domain.com
MAIL_HOSTNAME=mail.your-domain.com

# =====================================================
# REMINDER CONFIGURATION
# =====================================================

# Cron schedule for checking reminders (daily at 9 AM)
REMINDER_CHECK_INTERVAL=0 9 * * *

# Enable/disable email reminders
ENABLE_EMAIL_REMINDERS=true

# =====================================================
# APPLICATION SETTINGS
# =====================================================

# Allow new user registrations (set to false after initial setup)
ALLOW_REGISTRATION=false

# Application branding
APP_NAME=Kinect
APP_VERSION=latest

# =====================================================
# BACKUP CONFIGURATION
# =====================================================

# How many days to keep backups
BACKUP_RETENTION_DAYS=30

# Auto-update schedule (Sundays at 3 AM)
UPDATE_SCHEDULE=0 0 3 * * SUN

# =====================================================
# OPTIONAL FEATURES
# =====================================================

# Enable monitoring (uncomment to activate)
# ENABLE_MONITORING=true

# Enable automatic backups (uncomment to activate)  
# ENABLE_BACKUPS=true

# Enable auto-updates (uncomment to activate)
# ENABLE_AUTO_UPDATES=true

# =====================================================
# QUICK SETUP COMMANDS
# =====================================================
# 
# 1. Copy this file:
#    cp .env.production.example .env.production
#
# 2. Generate secure secrets:
#    JWT_SECRET=$(openssl rand -base64 32)
#    JWT_REFRESH_SECRET=$(openssl rand -base64 32)  
#    DATA_ENCRYPTION_KEY=$(openssl rand -base64 32)
#    BACKUP_ENCRYPTION_KEY=$(openssl rand -base64 32)
#
# 3. Edit .env.production with your values
#
# 4. Start production deployment:
#    docker compose -f docker-compose.production.yml --env-file .env.production up -d
#
# =====================================================